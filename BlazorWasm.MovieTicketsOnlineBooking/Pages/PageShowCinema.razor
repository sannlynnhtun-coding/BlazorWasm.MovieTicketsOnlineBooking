@inject PageChangeStateContainer StateContainer

<div class="ticket-plan-section padding-bottom padding-top">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-9 mb-5 mb-lg-0">
                <ul class="seat-plan-wrapper bg-five">
                    @if (CinemaRoomData is not null)
                    {
                        @foreach (var item in CinemaRoomData.CinemaAndRoomData)
                        {
                            <li>
                                <div class="movie-name">
                                    <div class="icons">
                                        <i class="far fa-heart"></i>
                                        <i class="fas fa-heart"></i>
                                    </div>
                                    <a href="javascript:void(0);" class="name">
                                        @item.Cinema.CinemaName
                                    </a>
                                    <div class="location-icon">
                                        <i class="fas fa-map-marker-alt"></i>
                                    </div>
                                </div>
                                <div class="movie-schedule">
                                    @foreach (var room in item.RoomList)
                                    {
                                        @* <div class="item">
                                            <a href="javascript:void(0);"
                                               @onclick="() => SendRoomData(room)"
                                               class="name">
                                                @room.RoomName
                                            </a>
                                        </div> *@
                                        <div class="item" @onclick="() => SendRoomData(room)">
                                                @room.RoomName
                                        </div>
                                    }
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        @if (CinemaRoomData is not null)
        {
            <div class="d-flex flex-column align-center">
                <MudPagination Size="Size.Medium" Variant="Variant.Filled" Color="Color.Primary"
                               SelectedChanged="PageChanged"
                               Count="@CinemaRoomData.TotalPage" Class="my-4" />
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Data { get; set; }

    [Parameter]
    public EventCallback<CinemaRoomViewModel?> ShowRoomSeat { get; set; }

    private CinemaRoomPaginationModel? CinemaRoomData { get; set; }
    private int currentPage { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        CinemaRoomData = await _dbService.GetCinemaRoomPagination(Data);
    }

    private async Task PageChanged(int pageNo)
    {
        CinemaRoomData = await _dbService.GetCinemaRoomPagination(Data, pageNo);
    }

    private async Task SendRoomData(CinemaRoomViewModel model)
    {
        StateContainer.CurrentPage = PageChangeEnum.PageSeat;
        await ShowRoomSeat.InvokeAsync(model);
    }
}